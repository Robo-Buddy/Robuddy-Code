// Generated by gencpp from file wpi_jaco_msgs/EulerToQuaternionResponse.msg
// DO NOT EDIT!


#ifndef WPI_JACO_MSGS_MESSAGE_EULERTOQUATERNIONRESPONSE_H
#define WPI_JACO_MSGS_MESSAGE_EULERTOQUATERNIONRESPONSE_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <geometry_msgs/Quaternion.h>

namespace wpi_jaco_msgs
{
template <class ContainerAllocator>
struct EulerToQuaternionResponse_
{
  typedef EulerToQuaternionResponse_<ContainerAllocator> Type;

  EulerToQuaternionResponse_()
    : orientation()  {
    }
  EulerToQuaternionResponse_(const ContainerAllocator& _alloc)
    : orientation(_alloc)  {
  (void)_alloc;
    }



   typedef  ::geometry_msgs::Quaternion_<ContainerAllocator>  _orientation_type;
  _orientation_type orientation;




  typedef boost::shared_ptr< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> const> ConstPtr;

}; // struct EulerToQuaternionResponse_

typedef ::wpi_jaco_msgs::EulerToQuaternionResponse_<std::allocator<void> > EulerToQuaternionResponse;

typedef boost::shared_ptr< ::wpi_jaco_msgs::EulerToQuaternionResponse > EulerToQuaternionResponsePtr;
typedef boost::shared_ptr< ::wpi_jaco_msgs::EulerToQuaternionResponse const> EulerToQuaternionResponseConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace wpi_jaco_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'wpi_jaco_msgs': ['/home/athomaz/vector_ws/src/wpi_jaco_msgs/msg', '/home/athomaz/vector_ws/devel/share/wpi_jaco_msgs/msg'], 'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/indigo/share/actionlib_msgs/cmake/../msg'], 'geometry_msgs': ['/opt/ros/indigo/share/geometry_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "8ed1de3b69473461225107f55ad59b9d";
  }

  static const char* value(const ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x8ed1de3b69473461ULL;
  static const uint64_t static_value2 = 0x225107f55ad59b9dULL;
};

template<class ContainerAllocator>
struct DataType< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "wpi_jaco_msgs/EulerToQuaternionResponse";
  }

  static const char* value(const ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> >
{
  static const char* value()
  {
    return "geometry_msgs/Quaternion orientation\n\
\n\
\n\
================================================================================\n\
MSG: geometry_msgs/Quaternion\n\
# This represents an orientation in free space in quaternion form.\n\
\n\
float64 x\n\
float64 y\n\
float64 z\n\
float64 w\n\
";
  }

  static const char* value(const ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.orientation);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct EulerToQuaternionResponse_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::wpi_jaco_msgs::EulerToQuaternionResponse_<ContainerAllocator>& v)
  {
    s << indent << "orientation: ";
    s << std::endl;
    Printer< ::geometry_msgs::Quaternion_<ContainerAllocator> >::stream(s, indent + "  ", v.orientation);
  }
};

} // namespace message_operations
} // namespace ros

#endif // WPI_JACO_MSGS_MESSAGE_EULERTOQUATERNIONRESPONSE_H
