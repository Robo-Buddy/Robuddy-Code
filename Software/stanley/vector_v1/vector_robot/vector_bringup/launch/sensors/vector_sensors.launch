<!-- Launch file for Vector sensor startup -->

<launch>
    <!-- SI has support for GPS, microstrain 3DM-GX3/4, PGR Flea3USB3, CRL Multisense SL, Velodyne VLP-16 and HDL32E, -->
    <!-- SICK LMS1XX/2XX, Hokuyo scanners, Kinova JACO/MICO, and various other peripherals and sensors. Most are available -->
    <!-- in custom integrated systems but are not included here to simplify-->
    
 <group if="$(optenv VECTOR_HAS_ONE_2D_LASER false)">
        <node pkg="urg_node" type="urg_node" name="$(optenv LASER1_PREFIX base)_laser_node" clear_params="true" respawn="true" if="$(optenv VECTOR_LASER1_IS_HOKUYO false)">
            <remap from="scan" to="/vector/$(optenv LASER1_PREFIX base)_scan" />
            <param name="ip_address" value="$(optenv VECTOR_LASER1_IP 10.66.171.6)" />
            <param name="ip_port" value="$(optenv VECTOR_LASER1_PORT 10940)" />
            <param name="frame_id" value="$(optenv LASER1_PREFIX base)_laser_link"/>
            <param name="calibrate_time" value="false" />
            <param name="publish_intensity" value="true" />
        </node>
        
        <node pkg="sick_tim" type="sick_tim551_2050001" name="$(optenv LASER1_PREFIX base)_laser_node" clear_params="true" respawn="true" if="$(optenv VECTOR_LASER1_IS_SICK_TIM false)">
            <remap from="scan" to="/vector/$(optenv LASER1_PREFIX base)_scan" />
            <param name="min_ang" type="double" value="-2.35619449019" />
            <param name="max_ang" type="double" value="2.35619449019" />
            <param name="intensity" type="bool" value="True" />
            <param name="skip" type="int" value="0" />
            <param name="frame_id" type="str" value="$(optenv LASER1_PREFIX base)_laser_link" />
            <param name="time_offset" type="double" value="-0.001" />
            <param name="publish_datagram" type="bool" value="False" />
            <param name="subscribe_datagram" type="bool" value="false" />
            <param name="range_min" type="double" value="0.05" />
            <param name="range_max" type="double" value="25.0" />
            <param name="hostname" type="string" value="$(optenv VECTOR_LASER1_IP 10.66.171.8)" />
            <param name="port" type="string" value="$(optenv VECTOR_LASER1_PORT 2112)" />
            <param name="timelimit" type="int" value="5" />

            <!-- Older versions of the scanner firmware report an incorrect time_increment.
             If you get a warning about time_increment, uncomment this. -->
            <!-- <param name="time_increment" type="double" value="0.000061722" /-->
        </node>
    
        <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="vector_laser_filter" clear_params="true" respawn="true" unless="$(optenv VECTOR_HAS_SECOND_2D_LASER false)">
            <remap from="scan" to="/vector/$(optenv LASER1_PREFIX base)_scan" />
            <remap from="scan_filtered" to="/vector/base_scan_filtered" />
            <param name="target_frame" value="base_link" />
            <param name="high_fidelity" value="true" />
            <rosparam command="load" 
                file="$(find vector_bringup)/launch/sensors/config/laser_scan_filter.yaml" />
        </node>
    </group>
    
    <group if="$(optenv VECTOR_HAS_SECOND_2D_LASER false)">
        <node pkg="urg_node" type="urg_node" name="$(optenv LASER2_PREFIX base)_laser_node" clear_params="true" respawn="true" if="$(optenv VECTOR_LASER2_IS_HOKUYO false)">
            <remap from="scan" to="/vector/$(optenv LASER2_PREFIX rear)_scan" />
            <param name="ip_address" value="$(optenv VECTOR_LASER2_IP 10.66.171.7)" />
            <param name="ip_port" value="$(optenv VECTOR_LASER2_PORT 10940)" />
            <param name="frame_id" value="vector/$(optenv LASER2_PREFIX rear)_laser_link"/>
            <param name="calibrate_time" value="false" />
            <param name="publish_intensity" value="true" />
        </node>
        
        <node pkg="sick_tim" type="sick_tim551_2050001" name="$(optenv LASER2_PREFIX base)_laser_node" respawn="false" if="$(optenv VECTOR_LASER2_IS_SICK_TIM false)">
            <remap from="scan" to="/vector/$(optenv LASER2_PREFIX rear)_scan" />
            <param name="min_ang" type="double" value="-2.35619449019" />
            <param name="max_ang" type="double" value="2.35619449019" />
            <param name="intensity" type="bool" value="True" />
            <param name="skip" type="int" value="0" />
            <param name="frame_id" type="str" value="/vector/$(optenv LASER2_PREFIX rear)_laser_link" />
            <param name="time_offset" type="double" value="-0.001" />
            <param name="publish_datagram" type="bool" value="False" />
            <param name="subscribe_datagram" type="bool" value="false" />
            <param name="range_min" type="double" value="0.05" />
            <param name="range_max" type="double" value="25.0" />
            <param name="hostname" type="string" value="$(optenv VECTOR_LASER2_IP 10.66.171.9)" />
            <param name="port" type="string" value="$(optenv VECTOR_LASER2_PORT 2112)" />
            <param name="timelimit" type="int" value="5" />
            <!-- Older versions of the scanner firmware report an incorrect time_increment.
             If you get a warning about time_increment, uncomment this. -->
            <!-- <param name="time_increment" type="double" value="0.000061722" /-->
        </node>
        
        <node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen">
            <param name="destination_frame" value="vector/base_link"/>
            <param name="cloud_destination_topic" value="/vector/merged_cloud"/>
            <param name="scan_destination_topic" value="/vector/scan_multi"/>
            <param name="laserscan_topics" value ="/vector/$(optenv LASER1_PREFIX front)_scan /vector/$(optenv LASER2_PREFIX rear)_scan"/>
        </node>
        
        <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="vector_laser_filter" clear_params="true" respawn="true">
            <remap from="scan" to="/vector/scan_multi" />
            <remap from="scan_filtered" to="/vector/base_scan_filtered" />
            <param name="target_frame" value="base_link" />
            <param name="high_fidelity" value="true" />
            <rosparam command="load" 
                file="$(find vector_bringup)/launch/sensors/config/laser_scan_filter.yaml" />
        </node>
    </group>

	<node pkg="um7" type="um7_driver" name="um7_node" if="$(optenv VECTOR_HAS_UM7_IMU false)" respawn="true">
		<param name="port" value="$(env VECTOR_UM7_DEV)"/>
		<param name="frame_id" value="ext_imu_frame"/>
        <remap from="/imu/data" to="/um7/data"/>
        <remap from="/imu/mag" to="/um7/mag"/>
        <remap from="/imu/rpy" to="/um7/rpy"/>
        <remap from="/imu/temperature" to="/um7/temperature"/>
	</node>

    <group ns="camera" if="$(optenv VECTOR_HAS_FLEA3 false)">
        <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" />

        <node pkg="nodelet" type="nodelet" name="camera_nodelet"
            args="load pointgrey_camera_driver/PointGreyCameraNodelet camera_nodelet_manager" >
            <param name="frame_id" value="camera_optical_frame" />
            <param name="serial" value="$(env VECTOR_FLEA3_SN)" />

            <!-- When unspecified, the driver will use the default framerate as given by the
            camera itself. Use this parameter to override that value for cameras capable of
            other framerates. -->
            <param name="frame_rate" value="30" />
            <param name="video_mode" value="format7_mode0"/>

            <!-- Use the camera_calibration package to create this file -->
            <param name="camera_info_url" value="file://$(find vector_bringup)/launch/sensors/config/camera_cal.yaml" if="$(optenv VECTOR_FLEA3_IS_CALIBRATED false)"/>
        </node>

        <node pkg="nodelet" type="nodelet" name="image_proc_debayer"
            args="load image_proc/debayer camera_nodelet_manager">
        </node>

        <node pkg="nodelet" type="nodelet" name="image_proc_rectify"
            args="load image_proc/rectify camera_nodelet_manager">
        </node>

    </group>
</launch> 
    
    
