#!/usr/bin/env python

import rospy
import random
import actionlib
from std_msgs.msg import Float64
import trajectory_msgs.msg 
import control_msgs.msg
from trajectory_msgs.msg import JointTrajectoryPoint
from control_msgs.msg import JointTrajectoryAction, JointTrajectoryGoal, FollowJointTrajectoryAction, FollowJointTrajectoryGoal



class Joint:
    def __init__(self):        
        self.jta = actionlib.SimpleActionClient('/pan_tilt_controller/follow_joint_trajectory', FollowJointTrajectoryAction)
        rospy.loginfo('Waiting for joint trajectory action')
        self.jta.wait_for_server()
        rospy.loginfo('Found joint trajectory action!')

        
    def move_joint(self, angles, time_dur):
        goal = FollowJointTrajectoryGoal()
        goal.trajectory.joint_names = ['pan_joint', 'tilt_joint']
        point = JointTrajectoryPoint()
        point.positions = angles
        point.time_from_start = rospy.Duration(time_dur)                  
        goal.trajectory.points.append(point)
        self.jta.send_goal_and_wait(goal)
              

def main():
        arm = Joint()
        arm.move_joint([0.0,0.5],1.0)
        arm.move_joint([0.0,0.0],1.0)
                        
if __name__ == '__main__':
      rospy.init_node('pan_tilt_home')
      main()
